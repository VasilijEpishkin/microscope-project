services:
  db:
    image: postgres:13
    container_name: microscope_db
    environment:
      - POSTGRES_DB=imagestore
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=2001was
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network
  app:
    build: .
    container_name: microscope_app
    command: bash -c "
      while !</dev/tcp/db/5432;
      do sleep 1;
      done;
      mkdir -p /app/static/tiles &&
      cp -rn /app/static/tiles/* /app/static/tiles/ 2>/dev/null || true &&
      ls -la /app/static/tiles &&
      python manage.py migrate &&
      python manage.py collectstatic --noinput &&
      python manage.py runserver 0.0.0.0:8000
      "
    volumes:
      - .:/app
      - static_volume:/app/static:rw
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_DB=imagestore
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=2001was
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
  nginx:
    image: nginx:alpine
    container_name: microscope_nginx
    volumes:
    - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    - ./nginx/logs:/var/log/nginx
    - static_volume:/app/static
    ports:
      - "80:80"
    depends_on:
      - app
    networks:
      - app-network
volumes:
  postgres_data:
  static_volume:

networks:
  app-network:
    driver: bridge